Diary Davis:

Schedule:

Thursday, 28.03.2024: - Lars & Mirco
Started with the presentation (PowerPoint) for the 04.04.2024. Worked on scheduling.

Thursday, 04.04.2024: - Mirco
Researched commands and utalization of gnuplot and experimented with it. Prepared plot for using it later.

Friday, 12.04.2024: Mirco
Prepared a LaTeX file for the report.

Saturday, 13.04.2024: - Lars
Today I worked on finishing our parsing algorithm in order to be able to execute commands properly.
Now our shell parses the input to some pattern as follows:
[First word] [every input word starting with "-" concatenated removing redunant "-"'s] [rest of words, ...]

Additionally, I implemented the "hist" command which displays the latest commands executed. For this command I added
the flags "-a" (all executed commands), "-t" (correctly executed commands) and "-f" (failed commands).
Where with the last two commands we see a maximum of five entries. Moreover I added some color to indicate,
whether a command was executed successfully or not. The data structure behind this command is a doubly linked list.
I made it double, in case we need it for future addons, such as traversing past commands using the arrow-keys on your keyboard.

Sunday, 14.04.2024: - Lars

Tuesday, 16.04.2024: Mirco
Achieved to make gnuplot work over the DAVIS-shell. It can now plot graphs with an input file from the users PC or the repository.
I will now work on a settings file and some flags, so the user can customize the graphs.
I reworked the history command and extended its functionalities. We now set a default amount of elements which are
getting printed. Moreover, I made it clearer on how you can use this command.

Tuesday, 16.04.2024: - Lars
Today I seem to have fixed the issue, where you could not print out larger amount of ndoes. In order to fix that,
I added mutexlocks to regulate the access to the linked list itself, because there seem to be some intersecting usages
among our program.

Thursday, 18.04.2024: - Lars
I finalized the implementation of our embedded minigame 'Wordle'. Now it offeres the possibility to use hints to uncover
either a correct letter at a correct position, or a letter which is in the word, but not necessariliy at the correct position.
The usage of the hints is connected to the small amount of points. We set the amount to 200 and 130 respectively.
In order to gain points to be able to afford such a hint, is to firstly use the shell by executing commands or to play 'Wordle'.
Depending on how "complicated" the command is, you receive more points. But be aware, playing 'Wordle' is free :)

Sunday, 21.04.2024: - Lars
Today I managed to add shared memory into the command execution section of our shell. We are already showing the state
of a command's execution in our history, but not yet properly and correct for system commands such as piped ones or
commands which are not built ins. The concept now enables the child process to overwrite a shared memroy integer,
in case something goes south with any command. We do not care why something did not execute. It just simply did not execute,
therefore we set the variable accordingly. Moreover, I fixed some bugs.

Friday, 26.04.2024: Mirco
I tried solving the problem with the paths for the plotting. It will accept either a path or a function written directly (e.g. sin(x)).
I tried handling the error with stat() to see if it is a path or not, but it will always tell me that it is not. I experimented with
multiple diffrent inputs but still the same result.

Saturday 27.04.2024: Mirco
Replaced stat() with acceess() to check if path exists. But it doesn't work either. Researched further to find another way.

Monday 29.04.2024: Mirco
I finally achieved to check the paths correctly. We have three cases:
- a path without '' or "" -> print with '' to gnuplot
- a path with '' or with "" -> print as is to gnuplot
- a direct function/no existing path -> print as is to gnuplot
Now we have to decide which settings we want as default.

Wednesday 01.05.2024: Lars
I am still trying to figure out, why with "ls -a" the folder ".." is being displayed twice.
I seem to have introduced this bug after adding the readable flag to it and the formatting for the "-l".
Additionally, I did some research regarding registring special keystrokes such as the arrow keys, which we want,
to traverse the history in classical shell manner. This is going to be a bit of a rough patch, as it introduces new levels of problems,
which are multithreaded access to the standard input, which is not good. However, I am still working on that.

Thursday 02.05.2024: Lars
I fixed the bug I had with the double entry of "..". Although I do not know what I did. But somehow it resolved itself.
I was just doodeling around and fixed it. Life's great.

Friday 03.05.2024: Mirco
We decided on the following flags and arguments for the plot command:
flags:
-b → removes borders
-g → removes grid
-e → adds errorbars
-p → graph with points
-l -> graph with lines
-l & -p → graph with lines and points
-s → saves graph as png directly

arguments (after file/function argument)
title:someGraph
xlabel:speed
ylabel:distance
color:#ffffff → changes color of graph lines/points to hexa value
xr:[-2:2] → limits range of x-values to given input
yr:[-2:2] → limits range of y-values to given input
legend:ne/nw/se/sw → moves legend to different corner

potentially added later:
pt:7 → changes point type according to gnuplot legend
ps:2 → changes point size relatively to default size
lw:2 → changes line width relatively to default size

Sunday 05.05.2024: Mirco
Now all arguments except the color argument work.
The color argument is not a 'set' command but has to be put after 'plot ...' so it has to be handled differetnly.
Most flags have to be handled like this so it should be easy to do them the same.

Monday 06.05.2024: Lars
Today I fixed the ls command to now support printing of other directories apart from the current one.

Tuesday 07.05.2024: Lars
I implemented the additional "-e" flag for the history command. With it we can now re-execute a previously executed command.
It seems to work after a couple of tests.

Tuesday 07.05.2024: Mirco
Implemented the flags and the color argument. Flag '-s' is still missing because I need to read into saving files a bit more.
There is still a problem: it prints out "invalid argument" when you have more then one string for the flags.
This is most likely because after concatinating the flags, the programm sees this as another empty argument.

Wednesday 08.05.2024: Mirco
Implemented darkmode and set it to default because it matches the theme of DAVIS more. Now I have to work on flag '-d' that can turn it off again.

Tuesday 14.05.2024: Mirco
Finished -d flag to disable darkmode and solved problem that it would be switched off after using flag once. I did the same for the default color.
Changed header file of plot.h to have all flags and arguments.

Tuesday 14.05.2024: Lars
Fixed a bug inside the parsing methods. Now commands using multiple flags are zeroterminated correctly.
Merged the plot branch to the main and adjusted merge conflicts.

Wednesday 15.05.2024: Mirco
Added another check to checkFuntion() in plot() that checks the given path without "" too.
I went over all helping methods in plot() and decided what should be a FAILURE and what SUCCESS and added a bit of errorhandling acordingly.

Thursday 16.05.2024: Lars
Today I added the chdir command. Additionally, I went over the command parsing and fixed some vulnerabilites regarding
segmentation faults or stack smashing. I think I got everything covered as an input. Moreover, I added a method
checking if a word for wordle contains special characters.

Thursday 16.05.2024: Mirco
There was a mistake with the branches and one commit (from the 14.05.2024) was on a separate plot-branch even after merging.
Instead of merging and risking any bugs I just did the small changes on the main-branch and commited again.

Friday 17.05.2024: Mirco
I finally achieved that the -s flag checks if the name of the new graph already exists and then adds a number behind it (e.g. DAVIS_plot -> DAVIS_plot(1)), so it doesn't overwrite the picture.
GNUplot originally just replaces the png without asking, but we thought it would be nicer of DAVIS to save it with another name.
Also started with adding an echo.c command to the commands directory.

Saturday 18.05.2024: Lars
I implemented the system command 'echo' and added some flags to it to modify the looks of the output. Now you can add
background color, font color and some styles.

Monday 20.05.2024: Mirco
Added the latex command that should create a new .tex file with a given template. This template can be used for your LaTeX code in any LateX programm (e.g. Overleaf).
Until now there are two templates "exercise" & "project-report". They are saved in the /resources/templates directory.
Exercise: is a template for a homework sheet.
Project-report: is a template for a project report. Here our own report for DAVIS was the inspiration.

Tuesday, 21.05.2024: Lars
I managed to add the possibility to use the arrow keys to traverse history commands. Moreover added documentation of methods I implemented.
I am finalizing my work, as I mostly finished my report as well.

Tuesday 21.05.2024: Mirco
Changed the argument in plot.c, so it doesn't fail anymore but just ignores wrong input arguments.
in latex.c I implemeted the argument setups and tried to copy the template contents to a new file.
Now the latex command can take in arguments that should be put into the templates.

Wednesday 22.05.2024: Mirco
Added a new method that removes "_" from a string because for the latex.c arguments you have to write an underline instead for a space.
This is needed so the arguments can be placed right into the templates.
Added the new argument picture where you can give a path to a picture that will be put into the example picture in the templates.
For that I need the method copyFile() which copies the Bytes of a picture to another new file.
IsImageFile() checks if the given path is a valid picture file (png or jpeg).
I had to rewrite latex.c a bit so the outcome is not just a .tex file but a new directory with the .tex file in it and if a picture is given the picture.

Friday 24.05.2024: Mirco
Implemented that it copies the picture into the newly created directory.
I created a new template for a simple CV.

Saturday 25.05.2024: Mirco
Rewrote the latxe.h header with all arguments and also added some commands.
Started to check plot.c and latex.c for memory leaks and added some new checks.

Wednesday 05.06.2024: Mirco
I started to stress test the plot command with big files. For that I created a method that writes n rows of data (here I choose the function x^3).
First I tested it for 20'000 rows then for 100'000'000, what was too much. I tried it again for 50'000'000 and 75'000'000 rows (that are ca. 2.7GB). Both worked.
I wanted to test longer inputs, but I got a stack smashing error and started debugging. I did not find any solution, but I have to write for the report now.